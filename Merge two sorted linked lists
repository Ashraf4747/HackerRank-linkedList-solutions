/*
  Merge two linked lists 
  head pointer input could be NULL as well for empty list
  Node is defined as 
  class Node {
     int data;
     Node next;
  } 1
  1 2 3 4
   5 6 7 8
*/

Node mergeLists(Node headA, Node headB) {
    Node A = headA ;
    Node B = headB ;
    Node newHead = null ;
    Node sort = null ;
    //if one of the linked list is null
    if (A == null )
    {
        return B ;
    }
    else if (B == null)
    {
        return A ;
    }
    // comparing the first node in each linked for the leaser value 
   else if (A != null && B != null)
   {
       if (A.data <= B.data)
       {
           sort = A ;
           A = sort.next ;
       }
       else 
       {
           sort = B ;
           B = sort.next ;
       }
       newHead = sort ;
   }
    
    // looping through two list 
    
    while (A != null && B != null)
    {
        if (A.data <= B.data)
        {
            sort.next = A ;
            sort = A ;
            A = sort.next ;
        }
        else 
        {
            sort.next = B ;
            sort = B;
            B = sort.next ;
        }
    }
    if (A == null)
    {
        sort.next = B;
    }
    else if (B == null) 
    {
        sort.next = A ;
    }
    return newHead ;
}
